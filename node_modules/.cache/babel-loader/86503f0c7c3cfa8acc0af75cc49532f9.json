{"ast":null,"code":"import _defineProperty from \"/Users/umarmuha/Documents/GITHUB/DashbaordWithReactTable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/umarmuha/Documents/GITHUB/DashbaordWithReactTable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/umarmuha/Documents/GITHUB/DashbaordWithReactTable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Users/umarmuha/Documents/GITHUB/DashbaordWithReactTable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/Users/umarmuha/Documents/GITHUB/DashbaordWithReactTable/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/umarmuha/Documents/GITHUB/DashbaordWithReactTable/src/views/examples/Tables.js\";\n\n/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from \"react\";\nimport { useTable, usePagination } from \"react-table\"; // reactstrap components\n\nimport { Badge, Button, Card, CardHeader, CardFooter, DropdownMenu, DropdownItem, UncontrolledDropdown, DropdownToggle, Media, Pagination, PaginationItem, PaginationLink, Progress, Table, Container, Row, UncontrolledTooltip } from \"reactstrap\"; // core components\n\nimport Header from \"components/Headers/Header.js\";\n\nvar EditableCell = function EditableCell(_ref) {\n  var initialValue = _ref.value,\n      index = _ref.row.index,\n      id = _ref.column.id,\n      updateMyData = _ref.updateMyData;\n\n  // We need to keep and update the state of the cell normally\n  var _React$useState = React.useState(initialValue),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var onChange = function onChange(e) {\n    setValue(e.target.value);\n  }; //   We'll only update the external data when the input is blurred\n\n\n  var onBlur = function onBlur() {\n    updateMyData(index, id, value);\n  }; // If the initialValue is changed external, sync it up with our state\n\n\n  React.useEffect(function () {\n    setValue(initialValue);\n  }, [initialValue]); //removed onBlur={onBlur}\n\n  return /*#__PURE__*/React.createElement(\"input\", {\n    value: value,\n    onChange: onChange,\n    onBlur: onBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  });\n};\n\nvar IndeterminateCheckbox = React.forwardRef(function (_ref2, ref) {\n  var indeterminate = _ref2.indeterminate,\n      rest = _objectWithoutProperties(_ref2, [\"indeterminate\"]);\n\n  var defaultRef = React.useRef();\n  var resolvedRef = ref || defaultRef;\n\n  var _useState = useState(_objectSpread({}, rest).checked),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  React.useEffect(function () {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n\n  var handleValue = function handleValue() {\n    if (value) setValue(false);else setValue(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, Object.assign({\n    type: \"checkbox\",\n    ref: resolvedRef\n  }, rest, {\n    onClick: handleValue,\n    value: value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }), value ? \"CheckedIn\" : \"Checkout\"));\n});\n\nfunction App(_ref3) {\n  var _this2 = this;\n\n  var columns = _ref3.columns,\n      data = _ref3.data,\n      updateMyData = _ref3.updateMyData;\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data,\n    updateMyData: updateMyData\n  }, function (hooks) {\n    hooks.visibleColumns.push(function (columns) {\n      return [{\n        id: \"selection\",\n        Header: function Header() {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 20\n            }\n          }, \"CheckIn/Checkout\");\n        },\n        Cell: function Cell(_ref4) {\n          var row = _ref4.row;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(IndeterminateCheckbox, Object.assign({}, row.getToggleRowSelectedProps(), {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 8\n            }\n          })));\n        }\n      }].concat(_toConsumableArray(columns));\n    });\n  }),\n      rows = _useTable.rows,\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      prepareRow = _useTable.prepareRow,\n      page = _useTable.page,\n      canPreviousPage = _useTable.canPreviousPage,\n      canNextPage = _useTable.canNextPage,\n      pageOptions = _useTable.pageOptions,\n      pageCount = _useTable.pageCount,\n      gotoPage = _useTable.gotoPage,\n      nextPage = _useTable.nextPage,\n      previousPage = _useTable.previousPage,\n      setPageSize = _useTable.setPageSize,\n      selectedFlatRows = _useTable.selectedFlatRows,\n      selectedRowIds = _useTable.state.selectedRowIds,\n      _useTable$state = _useTable.state,\n      pageIndex = _useTable$state.pageIndex,\n      pageSize = _useTable$state.pageSize;\n\n  console.log(cell);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Table, Object.assign({\n    bordered: true\n  }, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 6\n    }\n  }, headerGroups.map(function (headerGroup) {\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 8\n      }\n    }), headerGroup.headers.map(function (column) {\n      return /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 10\n        }\n      }), column.render(\"Header\"));\n    }));\n  })), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 6\n    }\n  }), rows.map(function (row, i) {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }), row.cells.map(function (cell) {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 12\n        }\n      }), cell.render(\"Cell\"));\n    }));\n  })))));\n}\n\nfunction Tables() {\n  var columns = React.useMemo(function () {\n    return [{\n      Header: \"Name\",\n      accessor: \"name\"\n    }, {\n      Header: \"UserName\",\n      accessor: \"username\"\n    }, {\n      Header: \"Email\",\n      accessor: \"email\"\n    }, {\n      Header: \"Website\",\n      accessor: \"website\"\n    }, {\n      Header: \"Profile Progress\",\n      Cell: EditableCell\n    }];\n  }, []);\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      data = _React$useState4[0],\n      setData = _React$useState4[1];\n\n  var updateMyData = function updateMyData(rowIndex, columnId, value) {\n    setData(function (old) {\n      return old.map(function (row, index) {\n        if (index === rowIndex) {\n          return _objectSpread({}, old[rowIndex], _defineProperty({}, columnId, value));\n        }\n\n        return row;\n      });\n    });\n    console.log(rowIndex, columnId, value);\n  };\n\n  React.useEffect(function () {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return setData(res.map(function (item) {\n        return {\n          name: item.name,\n          username: item.username,\n          email: item.email,\n          website: item.website\n        };\n      }));\n    });\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(App, {\n    columns: columns,\n    data: data,\n    updateMyData: updateMyData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 4\n    }\n  }));\n}\n\nexport default Tables;","map":{"version":3,"sources":["/Users/umarmuha/Documents/GITHUB/DashbaordWithReactTable/src/views/examples/Tables.js"],"names":["React","useState","useTable","usePagination","Badge","Button","Card","CardHeader","CardFooter","DropdownMenu","DropdownItem","UncontrolledDropdown","DropdownToggle","Media","Pagination","PaginationItem","PaginationLink","Progress","Table","Container","Row","UncontrolledTooltip","Header","EditableCell","initialValue","value","index","row","id","column","updateMyData","setValue","onChange","e","target","onBlur","useEffect","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","checked","current","handleValue","App","columns","data","hooks","visibleColumns","push","Cell","getToggleRowSelectedProps","rows","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","selectedFlatRows","selectedRowIds","state","pageIndex","pageSize","console","log","cell","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","i","getRowProps","cells","getCellProps","Tables","useMemo","accessor","setData","rowIndex","columnId","old","fetch","then","res","json","item","name","username","email","website"],"mappings":"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","sourcesContent":["/*!\n\n=========================================================\n* Argon Dashboard React - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/argon-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/argon-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { useState } from \"react\";\nimport { useTable, usePagination } from \"react-table\";\n// reactstrap components\nimport {\n\tBadge,\n\tButton,\n\tCard,\n\tCardHeader,\n\tCardFooter,\n\tDropdownMenu,\n\tDropdownItem,\n\tUncontrolledDropdown,\n\tDropdownToggle,\n\tMedia,\n\tPagination,\n\tPaginationItem,\n\tPaginationLink,\n\tProgress,\n\tTable,\n\tContainer,\n\tRow,\n\tUncontrolledTooltip,\n} from \"reactstrap\";\n// core components\nimport Header from \"components/Headers/Header.js\";\n\nconst EditableCell = ({\n\tvalue: initialValue,\n\trow: { index },\n\tcolumn: { id },\n\tupdateMyData, // This is a custom function that we supplied to our table instance\n}) => {\n\t// We need to keep and update the state of the cell normally\n\tconst [value, setValue] = React.useState(initialValue);\n\n\tconst onChange = (e) => {\n\t\tsetValue(e.target.value);\n\t};\n\n\t//   We'll only update the external data when the input is blurred\n\tconst onBlur = () => {\n\t\tupdateMyData(index, id, value);\n\t};\n\n\t// If the initialValue is changed external, sync it up with our state\n\tReact.useEffect(() => {\n\t\tsetValue(initialValue);\n\t}, [initialValue]);\n\n\t//removed onBlur={onBlur}\n\n\treturn <input value={value} onChange={onChange} onBlur={onBlur} />;\n};\n\nconst IndeterminateCheckbox = React.forwardRef(\n\t({ indeterminate, ...rest }, ref) => {\n\t\tconst defaultRef = React.useRef();\n\t\tconst resolvedRef = ref || defaultRef;\n\t\tconst [value, setValue] = useState({ ...rest }.checked);\n\t\tReact.useEffect(() => {\n\t\t\tresolvedRef.current.indeterminate = indeterminate;\n\t\t}, [resolvedRef, indeterminate]);\n\n\t\tconst handleValue = () => {\n\t\t\tif (value) setValue(false);\n\t\t\telse setValue(true);\n\t\t};\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tref={resolvedRef}\n\t\t\t\t\t{...rest}\n\t\t\t\t\tonClick={handleValue}\n\t\t\t\t\tvalue={value}\n\t\t\t\t>\n\t\t\t\t\t{value ? \"CheckedIn\" : \"Checkout\"}\n\t\t\t\t</Button>\n\t\t\t</>\n\t\t);\n\t}\n);\n\nfunction App({ columns, data, updateMyData }) {\n\tconst {\n\t\trows,\n\t\tgetTableProps,\n\t\tgetTableBodyProps,\n\t\theaderGroups,\n\t\tprepareRow,\n\t\tpage,\n\t\tcanPreviousPage,\n\t\tcanNextPage,\n\t\tpageOptions,\n\t\tpageCount,\n\t\tgotoPage,\n\t\tnextPage,\n\t\tpreviousPage,\n\t\tsetPageSize,\n\t\tselectedFlatRows,\n\t\tstate: { selectedRowIds },\n\t\tstate: { pageIndex, pageSize },\n\t} = useTable(\n\t\t{\n\t\t\tcolumns,\n\t\t\tdata,\n\t\t\tupdateMyData,\n\t\t},\n\t\t(hooks) => {\n\t\t\thooks.visibleColumns.push((columns) => [\n\t\t\t\t{\n\t\t\t\t\tid: \"selection\",\n\t\t\t\t\tHeader: () => <div>CheckIn/Checkout</div>,\n\t\t\t\t\tCell: ({ row }) => (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t\t...columns,\n\t\t\t]);\n\t\t}\n\t);\n\tconsole.log(cell);\n\treturn (\n\t\t<>\n\t\t\t<Container fluid>\n\t\t\t\t<Table bordered {...getTableProps()}>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t{headerGroups.map((headerGroup) => (\n\t\t\t\t\t\t\t<tr {...headerGroup.getHeaderGroupProps()}>\n\t\t\t\t\t\t\t\t{/* <th>CheckIn/Out</th> */}\n\t\t\t\t\t\t\t\t{headerGroup.headers.map((column) => (\n\t\t\t\t\t\t\t\t\t<th {...column.getHeaderProps()}>\n\t\t\t\t\t\t\t\t\t\t{column.render(\"Header\")}\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody {...getTableBodyProps()}>\n\t\t\t\t\t\t{rows.map((row, i) => {\n\t\t\t\t\t\t\tprepareRow(row);\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<tr {...row.getRowProps()}>\n\t\t\t\t\t\t\t\t\t{row.cells.map((cell) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tbody>\n\t\t\t\t</Table>\n\t\t\t</Container>\n\t\t</>\n\t);\n}\n\nfunction Tables() {\n\tconst columns = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tHeader: \"Name\",\n\t\t\t\taccessor: \"name\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: \"UserName\",\n\t\t\t\taccessor: \"username\",\n\t\t\t},\n\n\t\t\t{\n\t\t\t\tHeader: \"Email\",\n\t\t\t\taccessor: \"email\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: \"Website\",\n\t\t\t\taccessor: \"website\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tHeader: \"Profile Progress\",\n\t\t\t\tCell: EditableCell,\n\t\t\t},\n\t\t],\n\t\t[]\n\t);\n\n\tconst [data, setData] = React.useState([]);\n\n\tconst updateMyData = (rowIndex, columnId, value) => {\n\t\tsetData((old) =>\n\t\t\told.map((row, index) => {\n\t\t\t\tif (index === rowIndex) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...old[rowIndex],\n\t\t\t\t\t\t[columnId]: value,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn row;\n\t\t\t})\n\t\t);\n\t\tconsole.log(rowIndex, columnId, value);\n\t};\n\n\tReact.useEffect(() => {\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\n\t\t\t.then((res) => res.json())\n\t\t\t.then((res) =>\n\t\t\t\tsetData(\n\t\t\t\t\tres.map((item) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: item.name,\n\t\t\t\t\t\t\tusername: item.username,\n\t\t\t\t\t\t\temail: item.email,\n\t\t\t\t\t\t\twebsite: item.website,\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t});\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<App columns={columns} data={data} updateMyData={updateMyData} />\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Tables;\n"]},"metadata":{},"sourceType":"module"}